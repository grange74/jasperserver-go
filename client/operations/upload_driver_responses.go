package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UploadDriverReader is a Reader for the UploadDriver structure.
type UploadDriverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *UploadDriverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUploadDriverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadDriverOK creates a UploadDriverOK with default headers values
func NewUploadDriverOK() *UploadDriverOK {
	return &UploadDriverOK{}
}

/*UploadDriverOK handles this case with default header values.

UploadDriverOK upload driver o k
*/
type UploadDriverOK struct {
}

func (o *UploadDriverOK) Error() string {
	return fmt.Sprintf("[POST /jdbcDrivers][%d] uploadDriverOK ", 200)
}

func (o *UploadDriverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
