package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetConnectionMetadataParams creates a new GetConnectionMetadataParams object
// with the default values initialized.
func NewGetConnectionMetadataParams() *GetConnectionMetadataParams {
	var ()
	return &GetConnectionMetadataParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConnectionMetadataParamsWithTimeout creates a new GetConnectionMetadataParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConnectionMetadataParamsWithTimeout(timeout time.Duration) *GetConnectionMetadataParams {
	var ()
	return &GetConnectionMetadataParams{

		timeout: timeout,
	}
}

/*GetConnectionMetadataParams contains all the parameters to send to the API endpoint
for the get connection metadata operation typically these are written to a http.Request
*/
type GetConnectionMetadataParams struct {

	/*UUID*/
	UUID *string

	timeout time.Duration
}

// WithUUID adds the uuid to the get connection metadata params
func (o *GetConnectionMetadataParams) WithUUID(UUID *string) *GetConnectionMetadataParams {
	o.UUID = UUID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetConnectionMetadataParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.UUID != nil {

		// path param uuid
		if err := r.SetPathParam("uuid", *o.UUID); err != nil {
			return err
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
