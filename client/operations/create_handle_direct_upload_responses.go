package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// CreateHandleDirectUploadReader is a Reader for the CreateHandleDirectUpload structure.
type CreateHandleDirectUploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *CreateHandleDirectUploadReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateHandleDirectUploadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, client.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateHandleDirectUploadOK creates a CreateHandleDirectUploadOK with default headers values
func NewCreateHandleDirectUploadOK() *CreateHandleDirectUploadOK {
	return &CreateHandleDirectUploadOK{}
}

/*CreateHandleDirectUploadOK handles this case with default header values.

CreateHandleDirectUploadOK create handle direct upload o k
*/
type CreateHandleDirectUploadOK struct {
}

func (o *CreateHandleDirectUploadOK) Error() string {
	return fmt.Sprintf("[POST /import][%d] createHandleDirectUploadOK ", 200)
}

func (o *CreateHandleDirectUploadOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}
