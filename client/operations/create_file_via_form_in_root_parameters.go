package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCreateFileViaFormInRootParams creates a new CreateFileViaFormInRootParams object
// with the default values initialized.
func NewCreateFileViaFormInRootParams() *CreateFileViaFormInRootParams {
	var (
		createFoldersDefault bool = bool(true)
	)
	return &CreateFileViaFormInRootParams{
		CreateFolders: &createFoldersDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateFileViaFormInRootParamsWithTimeout creates a new CreateFileViaFormInRootParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateFileViaFormInRootParamsWithTimeout(timeout time.Duration) *CreateFileViaFormInRootParams {
	var (
		createFoldersDefault bool = bool(true)
	)
	return &CreateFileViaFormInRootParams{
		CreateFolders: &createFoldersDefault,

		timeout: timeout,
	}
}

/*CreateFileViaFormInRootParams contains all the parameters to send to the API endpoint
for the create file via form in root operation typically these are written to a http.Request
*/
type CreateFileViaFormInRootParams struct {

	/*CreateFolders*/
	CreateFolders *bool

	timeout time.Duration
}

// WithCreateFolders adds the createFolders to the create file via form in root params
func (o *CreateFileViaFormInRootParams) WithCreateFolders(CreateFolders *bool) *CreateFileViaFormInRootParams {
	o.CreateFolders = CreateFolders
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *CreateFileViaFormInRootParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.CreateFolders != nil {

		// query param createFolders
		var qrCreateFolders bool
		if o.CreateFolders != nil {
			qrCreateFolders = *o.CreateFolders
		}
		qCreateFolders := swag.FormatBool(qrCreateFolders)
		if qCreateFolders != "" {
			if err := r.SetQueryParam("createFolders", qCreateFolders); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
