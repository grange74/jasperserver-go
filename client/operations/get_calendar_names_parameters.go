package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetCalendarNamesParams creates a new GetCalendarNamesParams object
// with the default values initialized.
func NewGetCalendarNamesParams() *GetCalendarNamesParams {
	var ()
	return &GetCalendarNamesParams{}
}

/*GetCalendarNamesParams contains all the parameters to send to the API endpoint
for the get calendar names operation typically these are written to a http.Request
*/
type GetCalendarNamesParams struct {

	/*CalendarType*/
	CalendarType *string
}

// WithCalendarType adds the calendarType to the get calendar names params
func (o *GetCalendarNamesParams) WithCalendarType(calendarType *string) *GetCalendarNamesParams {
	o.CalendarType = calendarType
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetCalendarNamesParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.CalendarType != nil {

		// query param calendarType
		var qrCalendarType string
		if o.CalendarType != nil {
			qrCalendarType = *o.CalendarType
		}
		qCalendarType := qrCalendarType
		if qCalendarType != "" {
			if err := r.SetQueryParam("calendarType", qCalendarType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
