package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/swag"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetInputControlsInitialValuesParams creates a new GetInputControlsInitialValuesParams object
// with the default values initialized.
func NewGetInputControlsInitialValuesParams() *GetInputControlsInitialValuesParams {
	var (
		freshDataDefault bool = bool(false)
	)
	return &GetInputControlsInitialValuesParams{
		FreshData: &freshDataDefault,
	}
}

/*GetInputControlsInitialValuesParams contains all the parameters to send to the API endpoint
for the get input controls initial values operation typically these are written to a http.Request
*/
type GetInputControlsInitialValuesParams struct {

	/*FreshData*/
	FreshData *bool
	/*ReportUnitURI*/
	ReportUnitURI *string
}

// WithFreshData adds the freshData to the get input controls initial values params
func (o *GetInputControlsInitialValuesParams) WithFreshData(freshData *bool) *GetInputControlsInitialValuesParams {
	o.FreshData = freshData
	return o
}

// WithReportUnitURI adds the reportUnitUri to the get input controls initial values params
func (o *GetInputControlsInitialValuesParams) WithReportUnitURI(reportUnitUri *string) *GetInputControlsInitialValuesParams {
	o.ReportUnitURI = reportUnitUri
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetInputControlsInitialValuesParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.FreshData != nil {

		// query param freshData
		var qrFreshData bool
		if o.FreshData != nil {
			qrFreshData = *o.FreshData
		}
		qFreshData := swag.FormatBool(qrFreshData)
		if qFreshData != "" {
			if err := r.SetQueryParam("freshData", qFreshData); err != nil {
				return err
			}
		}

	}

	if o.ReportUnitURI != nil {

		// query param reportUnitURI
		var qrReportUnitURI string
		if o.ReportUnitURI != nil {
			qrReportUnitURI = *o.ReportUnitURI
		}
		qReportUnitURI := qrReportUnitURI
		if qReportUnitURI != "" {
			if err := r.SetQueryParam("reportUnitURI", qReportUnitURI); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
