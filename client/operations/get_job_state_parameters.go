package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/swag"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetJobStateParams creates a new GetJobStateParams object
// with the default values initialized.
func NewGetJobStateParams() *GetJobStateParams {
	var ()
	return &GetJobStateParams{}
}

/*GetJobStateParams contains all the parameters to send to the API endpoint
for the get job state operation typically these are written to a http.Request
*/
type GetJobStateParams struct {

	/*ID*/
	ID *int64
}

// WithID adds the id to the get job state params
func (o *GetJobStateParams) WithID(id *int64) *GetJobStateParams {
	o.ID = id
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetJobStateParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	if o.ID != nil {

		// query param id
		var qrID int64
		if o.ID != nil {
			qrID = *o.ID
		}
		qID := swag.FormatInt64(qrID)
		if qID != "" {
			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
